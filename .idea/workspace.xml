<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="ab15cdb5-eb67-4fe0-964c-29b172189793" name="Changes" comment="generated and implement grpc methods getSandboxId and getSandboxToken for remote using">
      <change afterPath="$PROJECT_DIR$/database/src/main/java/io/sandbox/service/TelegramUserServiceImpl.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tinkoff-api/src/main/java/io/sandbox/grpc_client/TelegramUserServiceClient.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tinkoff-api/src/main/java/io/sandbox/grpc_client/TelegramUserServiceStub.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tinkoff-api/src/main/proto/telegram_user_grpc.proto" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/database/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/database/pom.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/database/src/main/java/io/sandbox/entity/TelegramUser.java" beforeDir="false" afterPath="$PROJECT_DIR$/database/src/main/java/io/sandbox/entity/TelegramUser.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/database/src/main/java/io/sandbox/kafka/TelegramUserConsumer.java" beforeDir="false" afterPath="$PROJECT_DIR$/database/src/main/java/io/sandbox/kafka/TelegramUserConsumer.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/database/src/main/java/io/sandbox/service/UserServiceImpl.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/database/src/main/proto/TelegramUserProto.proto" beforeDir="false" afterPath="$PROJECT_DIR$/database/src/main/proto/telegram_user_grpc.proto" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/database/src/main/resources/application.properties" beforeDir="false" afterPath="$PROJECT_DIR$/database/src/main/resources/application.properties" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/telegram-bot/src/main/java/io/sandbox/command/Portfolio.java" beforeDir="false" afterPath="$PROJECT_DIR$/telegram-bot/src/main/java/io/sandbox/command/Portfolio.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/telegram-bot/src/main/java/io/sandbox/command/Start.java" beforeDir="false" afterPath="$PROJECT_DIR$/telegram-bot/src/main/java/io/sandbox/command/Start.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/telegram-bot/src/main/java/io/sandbox/kafka/TelegramUserProducer.java" beforeDir="false" afterPath="$PROJECT_DIR$/telegram-bot/src/main/java/io/sandbox/kafka/TelegramUserProducer.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/telegram-bot/src/main/java/io/sandbox/telegrambot/TelegramBot.java" beforeDir="false" afterPath="$PROJECT_DIR$/telegram-bot/src/main/java/io/sandbox/telegrambot/TelegramBot.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/telegram-bot/src/main/java/io/sandbox/telegrambot/UpdateHandler.java" beforeDir="false" afterPath="$PROJECT_DIR$/telegram-bot/src/main/java/io/sandbox/telegrambot/UpdateHandler.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/telegram-bot/src/main/java/io/sandbox/user_state/UserStateManager.java" beforeDir="false" afterPath="$PROJECT_DIR$/telegram-bot/src/main/java/io/sandbox/user_state/UserStateManager.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tinkoff-api/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/tinkoff-api/pom.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tinkoff-api/src/main/java/io/sandbox/grpc_client/TinkoffInvestApi.java" beforeDir="false" afterPath="$PROJECT_DIR$/tinkoff-api/src/main/java/io/sandbox/grpc_client/TinkoffInvestApi.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tinkoff-api/src/main/java/io/sandbox/grpc_client/TinkoffStub.java" beforeDir="false" afterPath="$PROJECT_DIR$/tinkoff-api/src/main/java/io/sandbox/grpc_client/TinkoffStub.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tinkoff-api/src/main/tinkoff-api-proto/common.proto" beforeDir="false" afterPath="$PROJECT_DIR$/tinkoff-api/src/main/proto/common.proto" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tinkoff-api/src/main/tinkoff-api-proto/instruments.proto" beforeDir="false" afterPath="$PROJECT_DIR$/tinkoff-api/src/main/proto/instruments.proto" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tinkoff-api/src/main/tinkoff-api-proto/marketdata.proto" beforeDir="false" afterPath="$PROJECT_DIR$/tinkoff-api/src/main/proto/marketdata.proto" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tinkoff-api/src/main/tinkoff-api-proto/operations.proto" beforeDir="false" afterPath="$PROJECT_DIR$/tinkoff-api/src/main/proto/operations.proto" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tinkoff-api/src/main/tinkoff-api-proto/orders.proto" beforeDir="false" afterPath="$PROJECT_DIR$/tinkoff-api/src/main/proto/orders.proto" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tinkoff-api/src/main/tinkoff-api-proto/sandbox.proto" beforeDir="false" afterPath="$PROJECT_DIR$/tinkoff-api/src/main/proto/sandbox.proto" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tinkoff-api/src/main/tinkoff-api-proto/signals.proto" beforeDir="false" afterPath="$PROJECT_DIR$/tinkoff-api/src/main/proto/signals.proto" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tinkoff-api/src/main/tinkoff-api-proto/stoporders.proto" beforeDir="false" afterPath="$PROJECT_DIR$/tinkoff-api/src/main/proto/stoporders.proto" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tinkoff-api/src/main/tinkoff-api-proto/users.proto" beforeDir="false" afterPath="$PROJECT_DIR$/tinkoff-api/src/main/proto/users.proto" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Interface" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="main" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$PROJECT_DIR$/database/src/main/java/io/sandbox/JpaApplication.java" root0="FORCE_HIGHLIGHTING" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;customColor&quot;: &quot;&quot;,
  &quot;associatedIndex&quot;: -1
}</component>
  <component name="ProjectId" id="2StFK2jL60RWRgxl2G01VGR23gs" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "ASKED_ADD_EXTERNAL_FILES": "true",
    "Notification.DisplayName-DoNotAsk-Settings Error": "Could not save settings",
    "Notification.DoNotAsk-Settings Error": "true",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "deletionFromPopupRequiresConfirmation": "false",
    "git-widget-placeholder": "refactoring__monolit",
    "jdk.selected.JAVA_MODULE": "openjdk-20",
    "last_opened_file_path": "/home/danil-floppa/Рабочий стол/projects/sandbox-parent/tinkoff-api/src/main/proto",
    "project.structure.last.edited": "Modules",
    "project.structure.proportion": "0.15",
    "project.structure.side.proportion": "0.2",
    "settings.editor.selected.configurable": "preferences.updates"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/tinkoff-api/src/main/proto" />
      <recent name="$PROJECT_DIR$/database/src/main/proto" />
      <recent name="$PROJECT_DIR$/telegram-bot/src/main/java/io/sandbox/command" />
      <recent name="$PROJECT_DIR$/command/src/main/java/io/sandbox/kafka" />
      <recent name="$PROJECT_DIR$/command/src/main/resources" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/database/src/main" />
      <recent name="$PROJECT_DIR$/command/src/main/java" />
      <recent name="$PROJECT_DIR$/command/src/main/resources" />
      <recent name="$PROJECT_DIR$/command/src/main/java/io/sandbox" />
    </key>
    <key name="MoveClassesOrPackagesDialog.RECENTS_KEY">
      <recent name="io.sandbox" />
    </key>
    <key name="CopyClassDialog.RECENTS_KEY">
      <recent name="io.sandbox.command" />
      <recent name="io.sandbox.grpc" />
      <recent name="io.sandbox.entity" />
    </key>
  </component>
  <component name="RunAnythingCache">
    <option name="myCommands">
      <command value="mvn clean install" />
    </option>
  </component>
  <component name="RunManager" selected="Application.CommandApplication">
    <configuration name="CommandApplication" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="io.sandbox.CommandApplication" />
      <module name="command" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="io.sandbox.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="KafkaApplication" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="io.sandbox.KafkaApplication" />
      <module name="kafka" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="io.sandbox.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="TelegramBotApplication" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="io.sandbox.TelegramBotApplication" />
      <module name="telegram-bot" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="io.sandbox.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="CommandApplicationTests.contextLoads" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="command" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="io.sandbox.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="io.sandbox" />
      <option name="MAIN_CLASS_NAME" value="io.sandbox.CommandApplicationTests" />
      <option name="METHOD_NAME" value="contextLoads" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="JUnit.CommandApplicationTests.contextLoads" />
        <item itemvalue="Docker.docker-compose.yml: Compose Deployment" />
        <item itemvalue="Application.TelegramBotApplication" />
        <item itemvalue="Application.KafkaApplication" />
        <item itemvalue="Application.CommandApplication" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="ab15cdb5-eb67-4fe0-964c-29b172189793" name="Changes" comment="" />
      <created>1689957902791</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1689957902791</updated>
    </task>
    <task id="LOCAL-00001" summary="sandbox 2 - refactoring monolithic architecture to microservice and kafka implementation">
      <option name="closed" value="true" />
      <created>1690197950450</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1690197950450</updated>
    </task>
    <task id="LOCAL-00002" summary="generated and implement grpc methods getSandboxId and getSandboxToken for remote using">
      <option name="closed" value="true" />
      <created>1690609078493</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1690609078493</updated>
    </task>
    <option name="localTasksCounter" value="3" />
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="branch">
                    <value>
                      <list>
                        <option value="main" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
    <MESSAGE value="sandbox 2 - refactoring monolithic architecture to microservice and kafka implementation" />
    <MESSAGE value="generated and implement grpc methods getSandboxId and getSandboxToken for remote using" />
    <option name="LAST_COMMIT_MESSAGE" value="generated and implement grpc methods getSandboxId and getSandboxToken for remote using" />
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
</project>